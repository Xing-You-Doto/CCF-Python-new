import requests
import json
import re
import time
import random
from tqdm import tqdm
file_id_nltk = [180165,180160,180171,180162,180161,180164,180170,180168,180163,180169,180167,180166]
blank_linesnum_nltk = {'api': [9, 12, 13, 19, 21, 26], 'arlstem': [13, 14, 29, 31, 32, 42, 48, 61, 70, 75, 100, 135, 153, 174, 203, 210, 229, 250, 282, 312, 329, 340, 353], 'cistem': [9, 12, 13, 17, 26, 33, 38, 42, 50, 53, 60, 62, 69, 71, 75, 80, 102, 105, 110, 113, 119, 123, 128, 134, 136, 138, 146, 153, 173, 175, 178, 181, 183, 185, 192, 197, 203, 210, 212, 217], 'isri': [10, 13, 15, 18, 23, 25, 30, 33, 35, 36, 41, 44, 46, 51, 60, 63, 76, 85, 105, 108, 116, 127, 131, 183, 220, 236, 248, 260, 266, 282, 320, 330, 338, 366, 374, 383, 390], 'lancaster': [7, 13, 15, 16, 20, 52, 171, 181, 184, 188, 195, 204, 211, 214, 218, 220, 224, 226, 228, 230, 233, 240, 243, 255, 259, 285, 296, 314, 321, 326, 329, 331, 347], 'porter': [3, 6, 8, 11, 14, 16, 20, 22, 24, 26, 27, 31, 34, 37, 45, 48, 52, 54, 59, 65, 70, 77, 82, 94, 96, 115, 120, 122, 125, 127, 143, 146, 148, 154, 159, 161, 163, 167, 169, 173, 179, 189, 194, 197, 204, 207, 215, 218, 220, 236, 244, 247, 270, 272, 275, 277, 289, 299, 302, 304, 311, 314, 327, 341, 349, 351, 358, 361, 383, 386, 388, 390, 394, 400, 402, 405, 409, 415, 418, 431, 434, 436, 438, 461, 470, 473, 496, 499, 506, 509, 511, 514, 516, 518, 539, 542, 544, 564, 569, 599, 602, 604, 606, 635, 638, 640, 642, 650, 653, 656, 662, 671, 673, 676, 677, 683, 686, 688, 695, 699, 703], 'regexp': [10, 12, 13, 19, 34, 41, 43, 48, 54], 'rslp': [2, 9, 20, 33, 35, 37, 38, 42, 55, 58, 66, 70, 73, 76, 82, 85, 88, 91, 94, 97, 99, 102, 106, 110, 113, 116, 127, 129, 139], 'snowball': [16, 19, 22, 24, 26, 29, 33, 35, 36, 38, 41, 46, 48, 51, 57, 59, 68, 72, 77, 87, 106, 114, 117, 118, 120, 125, 127, 133, 139, 150, 154, 157, 158, 162, 165, 169, 171, 175, 176, 178, 182, 184, 188, 193, 204, 216, 218, 219, 221, 225, 227, 231, 235, 239, 254, 262, 267, 269, 273, 278, 290, 299, 307, 309, 310, 320, 325, 327, 329, 332, 335, 337, 339, 341, 349, 351, 365, 367, 369, 371, 373, 375, 377, 392, 406, 408, 410, 412, 422, 424, 426, 433, 441, 448, 454, 457, 472, 474, 480, 486, 489, 497, 502, 505, 507, 509, 513, 517, 529, 542, 555, 564, 570, 578, 583, 591, 596, 602, 610, 615, 620, 625, 631, 638, 643, 651, 659, 667, 672, 678, 686, 694, 701, 709, 716, 722, 729, 733, 737, 741, 746, 754, 762, 774, 783, 788, 794, 801, 810, 821, 832, 889, 902, 907, 908, 910, 913, 931, 933, 960, 999, 1003, 1008, 1012, 1015, 1019, 1023, 1035, 1042, 1047, 1056, 1061, 1067, 1069, 1070, 1072, 1075, 1085, 1087, 1091, 1095, 1100, 1103, 1106, 1108, 1122, 1128, 1132, 1140, 1142, 1152, 1161, 1175, 1185, 1192, 1197, 1203, 1212, 1217, 1224, 1230, 1233, 1237, 1242, 1245, 1249, 1256, 1259, 1261, 1262, 1264, 1267, 1295, 1402, 1404, 1407, 1412, 1415, 1418, 1421, 1428, 1431, 1434, 1438, 1441, 1444, 1450, 1457, 1465, 1469, 1474, 1484, 1490, 1496, 1501, 1504, 1509, 1519, 1524, 1528, 1531, 1536, 1550, 1552, 1555, 1559, 1567, 1572, 1581, 1584, 1589, 1594, 1599, 1602, 1607, 1612, 1615, 1620, 1625, 1628, 1633, 1638, 1643, 1646, 1651, 1656, 1659, 1664, 1669, 1672, 1677, 1682, 1687, 1692, 1698, 1707, 1710, 1715, 1720, 1725, 1728, 1733, 1738, 1743, 1749, 1764, 1778, 1780, 1782, 1783, 1785, 1788, 1811, 1899, 1903, 1908, 1911, 1914, 1916, 1918, 1933, 1942, 1949, 1952, 1955, 1966, 1977, 1988, 2005, 2017, 2026, 2033, 2040, 2046, 2057, 2071, 2076, 2092, 2097, 2101, 2105, 2109, 2123, 2125, 2126, 2128, 2131, 2146, 2271, 2275, 2280, 2283, 2286, 2291, 2296, 2305, 2308, 2312, 2315, 2322, 2327, 2331, 2335, 2338, 2341, 2347, 2351, 2355, 2360, 2364, 2374, 2378, 2386, 2406, 2414, 2420, 2424, 2428, 2432, 2436, 2442, 2448, 2452, 2456, 2459, 2466, 2479, 2487, 2511, 2538, 2545, 2550, 2556, 2559, 2562, 2566, 2570, 2579, 2581, 2583, 2587, 2594, 2604, 2617, 2619, 2620, 2622, 2625, 2641, 2643, 2647, 2651, 2655, 2660, 2663, 2666, 2668, 2675, 2678, 2680, 2690, 2701, 2712, 2726, 2738, 2744, 2753, 2757, 2763, 2773, 2775, 2776, 2778, 2781, 2809, 2811, 2839, 2989, 2993, 2998, 3001, 3004, 3006, 3012, 3016, 3023, 3027, 3032, 3043, 3050, 3058, 3065, 3069, 3076, 3084, 3092, 3100, 3115, 3130, 3142, 3144, 3148, 3155, 3168, 3176, 3186, 3188, 3189, 3191, 3194, 3206, 3208, 3391, 3395, 3400, 3403, 3406, 3408, 3417, 3423, 3430, 3433, 3436, 3445, 3452, 3461, 3466, 3470, 3474, 3478, 3485, 3492, 3496, 3500, 3504, 3508, 3513, 3517, 3521, 3526, 3531, 3539, 3547, 3552, 3556, 3560, 3562, 3564, 3565, 3567, 3570, 3584, 3586, 3620, 3622, 3636, 3640, 3645, 3648, 3651, 3653, 3660, 3671, 3678, 3684, 3686, 3687, 3689, 3692, 3704, 3706, 3880, 3884, 3889, 3892, 3895, 3898, 3905, 3908, 3914, 3918, 3923, 3927, 3931, 3938, 3941, 3944, 3948, 3952, 3956, 3961, 3965, 3970, 3974, 3978, 3983, 3991, 3997, 4001, 4007, 4015, 4020, 4025, 4028, 4030, 4032, 4033, 4035, 4038, 4052, 4054, 4282, 4286, 4291, 4294, 4297, 4300, 4305, 4308, 4311, 4318, 4323, 4330, 4333, 4338, 4341, 4346, 4350, 4353, 4355, 4361, 4369, 4372, 4380, 4400, 4416, 4419, 4432, 4438, 4441, 4447, 4451, 4463, 4467, 4504, 4511, 4513, 4515, 4516, 4518, 4521, 4539, 4541, 4878, 4882, 4887, 4891, 4897, 4900, 4902, 4908, 4910, 4930, 4938, 5088, 5126, 5134, 5139, 5145, 5150, 5159, 5163, 5165, 5167, 5171, 5174, 5177, 5180, 5187, 5192, 5195, 5200, 5205, 5210, 5213, 5215, 5219, 5223, 5230, 5300, 5302, 5306, 5310, 5317, 5354, 5356, 5357, 5359, 5362, 5378, 5380, 5558, 5562, 5567, 5570, 5573, 5575, 5578, 5583, 5603, 5609, 5614, 5620, 5625, 5629, 5633, 5651, 5655, 5659, 5663, 5667, 5672, 5676, 5681, 5686, 5698, 5706, 5715, 5719, 5726, 5730, 5732, 5734, 5739, 5753, 5754, 5756, 5759, 5773, 5775, 5819, 5823, 5828, 5831, 5834, 5836, 5848, 5855, 5864, 5866, 5867, 5871, 5876, 5878, 5880, 5899, 5904, 5906, 5914, 5917, 5926, 5929, 5934], 'util': [7, 8, 14, 15], 'wordnet': [8, 11, 12, 16, 19, 33, 36, 40, 43, 44, 48], '__init__': [9, 12, 20, 23]}
all_lines_num_nltk = [362, 218, 396, 349, 709, 56, 140, 5943, 24, 49, 32, 29]
like_name = ['赵俊楠','张靖松','周小晖','李贤达','戴亚桥','龚逸青','秦思宸','陈宗锐','徐路凯','杨富刚']
like2_name = ['赵嘉艺','文智华','邓善君','魏远','陈伟智','吴学东','陈泽坤','王焰坤','方家琦','郭春希']
cookie = "ca5isjl9sm6cg8cnut8pr7dmh5kvftmj"
def get_annotation(linesnum,pageID):
	url_0 = "http://codepedia.trustie.net/operations/show_annotation/"
	data = {
		"file_id":pageID,
		"line_num":linesnum
	}
	req = requests.post(url_0,data=data,headers=header)
	sss = req.content.decode('unicode_escape')
	groups_id = re.findall("add_comment_action\(this,[0123456789]{6}",sss)
	groups_name = re.findall("inlineBlockfont\">.{3}",sss)
	for i in range(len(groups_name)):
		if groups_name[i][-1] == '<':
			groups_name[i] = groups_name[i][-3:-1]
		else:
			groups_name[i] = groups_name[i][-3:]
	groups_id = [x[-6:] for x in groups_id]
	return groups_id,groups_name
def add_annotation(string,linesnum):
	url_1 = "http://codepedia.trustie.net/operations/add_comment/"
	data0 = {
		"object_id": linesnum,
		"type":"annotation",
		"content":string
	}		
	req = requests.post(url_1,data = data0, headers = header)
	if req.status_code==200:
		'''
		if re.search('fail',text.text):
            print(i , ': fail to add, maybe already add')
            #add_log.write('{} , : fial to add, maybe already add\n'.format(str(i)))
        else:
       	'''
		print(linesnum , ': add succeed')
            #add_log.write('{} , : add succeed\n'.format(str(i)))
	else:
		print(linesnum, 'error')
        #add_log.write('{} , : error\n'.format(str(i)))
def add_good(num,name,filename):
	global count
	action = "http://codepedia.trustie.net/operations/add_vote/"
	data = {
		"vote_type":"annotation",
		"object_id":num,
		"vote_value":1 #1 赞 -1 踩 如果点过赞回回复 {"status": "success", "info": "cancel", "value": -1, "msg": "cancel success"}
	}
	#点赞成功
	#{"status": "success", "msg": "vote success", "value": 1}
	req = requests.post(action,data = data, headers = header)
	print("File:  {} name:  {} Count:  {}".format(filename,name,count_0),req.content.decode('unicode_escape'))
#点赞
'''
for j in range(10):
	ID,name = get_annotation(j)
	print(ID,name,len(ID),len(name))
	for i in range(min(len(ID),len(name))):
		print("PageId: {}   ID : {}".format(j,name[i]))
		if name[i] == "文智华":
			add_good(ID[i])
			time.sleep(1)
'''
#评论
global count
count = 33  #1086
x = 0
count_0 = 1
for key in blank_linesnum_nltk.keys():
	header = {
	'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0' ,
	'Accept': 'application/json, text/javascript, */*; q=0.01',
	'X-Requested-With': 'XMLHttpRequest',
	'Referer': 'http://codepedia.trustie.net/projects/nltk/nltk/stem/{}.py'.format(key),
	'Cookie': 'sessionid={}'.format(cookie)
	}
	for lines in range(all_lines_num_nltk[x]):
		ID, name = get_annotation(lines,file_id_nltk[x])
		count_0 += 1
		if len(ID) > 0:
			for i in range(min(len(ID),len(name))):
				if name[i] in like2_name:
					add_good(ID[i],name[i],key)

	